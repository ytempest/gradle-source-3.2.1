/*    */ package com.android.build.gradle.internal.api.dsl.variant; import com.android.build.gradle.internal.variant2.AppVariantImpl;
/*    */ 
/*    */ @kotlin.Metadata(mv={1, 1, 9}, bv={1, 0, 2}, k=1, d1={"\000ä\001\n\002\030\002\n\002\030\002\n\000\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\n\002\030\002\n\002\b\003\n\002\020\016\n\002\b\005\n\002\020 \n\002\030\002\n\002\b\003\n\002\020!\n\002\030\002\n\002\b\006\n\002\030\002\n\002\b\003\n\002\020\013\n\002\b\005\n\002\030\002\n\002\b\006\n\002\030\002\n\002\b\006\n\002\030\002\n\002\b\005\n\002\030\002\n\002\b\003\n\002\030\002\n\002\b\006\n\002\030\002\n\002\b\003\n\002\020%\n\002\020\000\n\002\b\005\n\002\020\b\n\002\b\005\n\002\030\002\n\002\b\n\n\002\030\002\n\002\b\r\n\002\030\002\n\002\b\003\n\002\030\002\n\002\b \n\002\030\002\n\002\b\003\n\002\030\002\n\002\b\013\n\002\030\002\n\002\b\005\n\002\030\002\n\002\b\013\n\002\020\002\n\000\n\002\030\002\n\002\b\017\b\000\030\0002\0020\001B\017\b\000\022\006\020\002\032\0020\003¢\006\002\020\004J\032\020\005\032\0030»\0012\016\020¼\001\032\t\022\004\022\0020\0060½\001H\001J%\020¾\001\032\0030»\0012\007\020¿\001\032\0020\0162\006\020q\032\0020\0162\007\020À\001\032\0020\016H\001J\032\020 \032\0030»\0012\016\020¼\001\032\t\022\004\022\0020!0½\001H\001J\032\020*\032\0030»\0012\016\020¼\001\032\t\022\004\022\0020+0½\001H\001J\032\0201\032\0030»\0012\016\020¼\001\032\t\022\004\022\002020½\001H\001J\033\020Á\001\032\0030»\0012\016\020¼\001\032\t\022\004\022\002090½\001H\001J\032\0208\032\0030»\0012\016\020¼\001\032\t\022\004\022\002090½\001H\001J\032\020>\032\0030»\0012\016\020¼\001\032\t\022\004\022\0020?0½\001H\001J\n\020Â\001\032\0020%H\001J\n\020Ã\001\032\0020%H\001J\n\020Ä\001\032\0020%H\001J\n\020Å\001\032\0020%H\001J\n\020Æ\001\032\0020%H\001J\n\020Ç\001\032\0020%H\001J\n\020È\001\032\0020%H\001J\032\020B\032\0030»\0012\016\020¼\001\032\t\022\004\022\0020C0½\001H\001J\032\020I\032\0030»\0012\016\020¼\001\032\t\022\004\022\0020J0½\001H\001J\022\020Z\032\0030»\0012\006\020Z\032\0020UH\001J\022\020Z\032\0030»\0012\006\020Z\032\0020\016H\001J\032\020n\032\0030»\0012\016\020¼\001\032\t\022\004\022\0020\0250½\001H\001J\032\020s\032\0030»\0012\016\020¼\001\032\t\022\004\022\0020t0½\001H\001J\032\020w\032\0030»\0012\016\020¼\001\032\t\022\004\022\0020x0½\001H\001J%\020É\001\032\0030»\0012\007\020¿\001\032\0020\0162\006\020q\032\0020\0162\007\020À\001\032\0020\016H\001J\022\020^\032\0030»\0012\006\020Z\032\0020UH\001J\022\020^\032\0030»\0012\006\020Z\032\0020\016H\001J\024\020¤\001\032\0030»\0012\007\020¢\001\032\0020UH\001J\024\020¤\001\032\0030»\0012\007\020¢\001\032\0020\016H\001J\034\020Ê\001\032\0030»\0012\017\020¼\001\032\n\022\005\022\0030\0010½\001H\001J\024\020¢\001\032\0030»\0012\007\020¢\001\032\0020UH\001J\024\020¢\001\032\0030»\0012\007\020¢\001\032\0020\016H\001J\t\020Ë\001\032\0020\016H\026J\033\020¬\001\032\0030»\0012\016\020¼\001\032\t\022\004\022\0020\0250½\001H\001J\034\020®\001\032\0030»\0012\017\020¼\001\032\n\022\005\022\0030¯\0010½\001H\001R\022\020\005\032\0020\006X\005¢\006\006\032\004\b\007\020\bR\024\020\t\032\004\030\0010\nX\005¢\006\006\032\004\b\013\020\fR\032\020\r\032\004\030\0010\016X\017¢\006\f\032\004\b\017\020\020\"\004\b\021\020\022R\030\020\023\032\b\022\004\022\0020\0250\024X\005¢\006\006\032\004\b\026\020\027R\036\020\030\032\b\022\004\022\0020\0320\031X\017¢\006\f\032\004\b\033\020\027\"\004\b\034\020\035R\022\020\036\032\0020\016X\005¢\006\006\032\004\b\037\020\020R\022\020 \032\0020!X\005¢\006\006\032\004\b\"\020#R\030\020$\032\0020%X\017¢\006\f\032\004\b&\020'\"\004\b(\020)R\022\020*\032\0020+X\005¢\006\006\032\004\b,\020-R\030\020.\032\0020%X\017¢\006\f\032\004\b/\020'\"\004\b0\020)R\022\0201\032\00202X\005¢\006\006\032\004\b3\0204R\030\0205\032\0020%X\017¢\006\f\032\004\b6\020'\"\004\b7\020)R\022\0208\032\00209X\005¢\006\006\032\004\b:\020;R\030\020<\032\b\022\004\022\0020\0160\024X\005¢\006\006\032\004\b=\020\027R\022\020>\032\0020?X\005¢\006\006\032\004\b@\020AR\022\020B\032\0020CX\005¢\006\006\032\004\bD\020ER\030\020F\032\0020%X\017¢\006\f\032\004\bG\020'\"\004\bH\020)R\022\020I\032\0020JX\005¢\006\006\032\004\bK\020LR$\020M\032\016\022\004\022\0020\016\022\004\022\0020O0NX\017¢\006\f\032\004\bP\020Q\"\004\bR\020SR\032\020T\032\004\030\0010UX\017¢\006\f\032\004\bV\020W\"\004\bX\020YR\032\020Z\032\004\030\0010[X\017¢\006\f\032\004\b\\\020]\"\004\b^\020_R\032\020`\032\004\030\0010%X\017¢\006\f\032\004\ba\020b\"\004\bc\020dR\032\020e\032\004\030\0010fX\017¢\006\f\032\004\bg\020h\"\004\bi\020jR\032\020k\032\004\030\0010fX\017¢\006\f\032\004\bl\020h\"\004\bm\020jR\024\020n\032\004\030\0010\025X\005¢\006\006\032\004\bo\020pR\022\020q\032\0020\016X\005¢\006\006\032\004\br\020\020R\022\020s\032\0020tX\005¢\006\006\032\004\bu\020vR\022\020w\032\0020xX\005¢\006\006\032\004\by\020zR\030\020{\032\0020%X\017¢\006\f\032\004\b|\020'\"\004\b}\020)R\031\020~\032\0020%X\017¢\006\r\032\004\b\020'\"\005\b\001\020)R\035\020\001\032\004\030\0010%X\017¢\006\016\032\005\b\001\020b\"\005\b\001\020dR\035\020\001\032\0020UX\017¢\006\020\032\006\b\001\020\001\"\006\b\001\020\001R\035\020\001\032\004\030\0010%X\017¢\006\016\032\005\b\001\020b\"\005\b\001\020dR\035\020\001\032\004\030\0010%X\017¢\006\016\032\005\b\001\020b\"\005\b\001\020dR\035\020\001\032\004\030\0010UX\017¢\006\016\032\005\b\001\020W\"\005\b\001\020YR!\020\001\032\b\022\004\022\0020\0160\031X\017¢\006\016\032\005\b\001\020\027\"\005\b\001\020\035R!\020\001\032\b\022\004\022\0020\0320\031X\017¢\006\016\032\005\b\001\020\027\"\005\b\001\020\035R\026\020\001\032\0030\001X\005¢\006\b\032\006\b\001\020\001R \020\001\032\005\030\0010\001X\017¢\006\020\032\006\b\001\020\001\"\006\b \001\020¡\001R\035\020¢\001\032\004\030\0010[X\017¢\006\016\032\005\b£\001\020]\"\005\b¤\001\020_R\033\020¥\001\032\0020%X\017¢\006\016\032\005\b¦\001\020'\"\005\b§\001\020)R\030\020¨\001\032\005\030\0010©\001X\005¢\006\b\032\006\bª\001\020«\001R\026\020¬\001\032\004\030\0010\025X\005¢\006\007\032\005\b­\001\020pR\026\020®\001\032\0030¯\001X\005¢\006\b\032\006\b°\001\020±\001R\035\020²\001\032\004\030\0010UX\017¢\006\016\032\005\b³\001\020W\"\005\b´\001\020YR\035\020µ\001\032\004\030\0010\016X\017¢\006\016\032\005\b¶\001\020\020\"\005\b·\001\020\022R\033\020¸\001\032\0020%X\017¢\006\016\032\005\b¹\001\020'\"\005\bº\001\020)¨\006Ì\001"}, d2={"Lcom/android/build/gradle/internal/api/dsl/variant/ApplicationVariantShim;", "Lcom/android/build/api/dsl/variant/ApplicationVariant;", "internalObject", "Lcom/android/build/gradle/internal/variant2/AppVariantImpl;", "(Lcom/android/build/gradle/internal/variant2/AppVariantImpl;)V", "aaptOptions", "Lcom/android/build/api/dsl/options/AaptOptions;", "getAaptOptions", "()Lcom/android/build/api/dsl/options/AaptOptions;", "androidTestVariant", "Lcom/android/build/api/dsl/variant/AndroidTestVariant;", "getAndroidTestVariant", "()Lcom/android/build/api/dsl/variant/AndroidTestVariant;", "applicationId", "", "getApplicationId", "()Ljava/lang/String;", "setApplicationId", "(Ljava/lang/String;)V", "baseSourceSets", "", "Lcom/android/build/api/sourcesets/AndroidSourceSet;", "getBaseSourceSets", "()Ljava/util/List;", "buildConfigFields", "", "Lcom/android/build/api/dsl/model/TypedValue;", "getBuildConfigFields", "setBuildConfigFields", "(Ljava/util/List;)V", "buildTypeName", "getBuildTypeName", "compileOptions", "Lcom/android/build/api/dsl/options/CompileOptions;", "getCompileOptions", "()Lcom/android/build/api/dsl/options/CompileOptions;", "crunchPngs", "", "getCrunchPngs", "()Z", "setCrunchPngs", "(Z)V", "dataBinding", "Lcom/android/builder/model/DataBindingOptions;", "getDataBinding", "()Lcom/android/builder/model/DataBindingOptions;", "debuggable", "getDebuggable", "setDebuggable", "dexOptions", "Lcom/android/build/api/dsl/options/DexOptions;", "getDexOptions", "()Lcom/android/build/api/dsl/options/DexOptions;", "embedMicroApp", "getEmbedMicroApp", "setEmbedMicroApp", "externalNativeBuildOptions", "Lcom/android/build/api/dsl/options/ExternalNativeBuildOptions;", "getExternalNativeBuildOptions", "()Lcom/android/build/api/dsl/options/ExternalNativeBuildOptions;", "flavorNames", "getFlavorNames", "instrumentationOptions", "Lcom/android/build/api/dsl/options/InstrumentationOptions;", "getInstrumentationOptions", "()Lcom/android/build/api/dsl/options/InstrumentationOptions;", "javaCompileOptions", "Lcom/android/build/api/dsl/options/JavaCompileOptions;", "getJavaCompileOptions", "()Lcom/android/build/api/dsl/options/JavaCompileOptions;", "jniDebuggable", "getJniDebuggable", "setJniDebuggable", "lintOptions", "Lcom/android/build/api/dsl/options/LintOptions;", "getLintOptions", "()Lcom/android/build/api/dsl/options/LintOptions;", "manifestPlaceholders", "", "", "getManifestPlaceholders", "()Ljava/util/Map;", "setManifestPlaceholders", "(Ljava/util/Map;)V", "maxSdkVersion", "", "getMaxSdkVersion", "()Ljava/lang/Integer;", "setMaxSdkVersion", "(Ljava/lang/Integer;)V", "minSdkVersion", "Lcom/android/build/api/dsl/ApiVersion;", "getMinSdkVersion", "()Lcom/android/build/api/dsl/ApiVersion;", "setMinSdkVersion", "(Lcom/android/build/api/dsl/ApiVersion;)V", "multiDexEnabled", "getMultiDexEnabled", "()Ljava/lang/Boolean;", "setMultiDexEnabled", "(Ljava/lang/Boolean;)V", "multiDexKeepFile", "Ljava/io/File;", "getMultiDexKeepFile", "()Ljava/io/File;", "setMultiDexKeepFile", "(Ljava/io/File;)V", "multiDexKeepProguard", "getMultiDexKeepProguard", "setMultiDexKeepProguard", "multiFlavorSourceSet", "getMultiFlavorSourceSet", "()Lcom/android/build/api/sourcesets/AndroidSourceSet;", "name", "getName", "ndkOptions", "Lcom/android/build/api/dsl/options/NdkOptions;", "getNdkOptions", "()Lcom/android/build/api/dsl/options/NdkOptions;", "postProcessing", "Lcom/android/build/api/dsl/options/PostProcessingOptions;", "getPostProcessing", "()Lcom/android/build/api/dsl/options/PostProcessingOptions;", "pseudoLocalesEnabled", "getPseudoLocalesEnabled", "setPseudoLocalesEnabled", "renderscriptDebuggable", "getRenderscriptDebuggable", "setRenderscriptDebuggable", "renderscriptNdkModeEnabled", "getRenderscriptNdkModeEnabled", "setRenderscriptNdkModeEnabled", "renderscriptOptimLevel", "getRenderscriptOptimLevel", "()I", "setRenderscriptOptimLevel", "(I)V", "renderscriptSupportModeBlasEnabled", "getRenderscriptSupportModeBlasEnabled", "setRenderscriptSupportModeBlasEnabled", "renderscriptSupportModeEnabled", "getRenderscriptSupportModeEnabled", "setRenderscriptSupportModeEnabled", "renderscriptTargetApi", "getRenderscriptTargetApi", "setRenderscriptTargetApi", "resConfigs", "getResConfigs", "setResConfigs", "resValues", "getResValues", "setResValues", "shaders", "Lcom/android/build/api/dsl/options/ShaderOptions;", "getShaders", "()Lcom/android/build/api/dsl/options/ShaderOptions;", "signingConfig", "Lcom/android/build/api/dsl/options/SigningConfig;", "getSigningConfig", "()Lcom/android/build/api/dsl/options/SigningConfig;", "setSigningConfig", "(Lcom/android/build/api/dsl/options/SigningConfig;)V", "targetSdkVersion", "getTargetSdkVersion", "setTargetSdkVersion", "testCoverageEnabled", "getTestCoverageEnabled", "setTestCoverageEnabled", "unitTestVariant", "Lcom/android/build/api/dsl/variant/UnitTestVariant;", "getUnitTestVariant", "()Lcom/android/build/api/dsl/variant/UnitTestVariant;", "variantSourceSet", "getVariantSourceSet", "vectorDrawables", "Lcom/android/build/api/dsl/options/VectorDrawablesOptions;", "getVectorDrawables", "()Lcom/android/build/api/dsl/options/VectorDrawablesOptions;", "versionCode", "getVersionCode", "setVersionCode", "versionName", "getVersionName", "setVersionName", "zipAlignEnabled", "getZipAlignEnabled", "setZipAlignEnabled", "", "action", "Lorg/gradle/api/Action;", "buildConfigField", "type", "value", "externalNativeBuild", "isDebuggable", "isEmbedMicroApp", "isJniDebuggable", "isPseudoLocalesEnabled", "isRenderscriptDebuggable", "isTestCoverageEnabled", "isZipAlignEnabled", "resValue", "shaderOptions", "toString", "gradle-core"})
/*    */ public final class ApplicationVariantShim implements com.android.build.api.dsl.variant.ApplicationVariant { public void vectorDrawables(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.dsl.options.VectorDrawablesOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.vectorDrawables(action); } public void variantSourceSet(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceSet> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.variantSourceSet(action); } public void targetSdkVersion(@org.jetbrains.annotations.NotNull String targetSdkVersion) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(targetSdkVersion, "targetSdkVersion");
/*    */     $$delegate_0.targetSdkVersion(targetSdkVersion); } public void targetSdkVersion(int targetSdkVersion) { $$delegate_0.targetSdkVersion(targetSdkVersion); } public void shaderOptions(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.dsl.options.ShaderOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.shaderOptions(action); } public void setTargetSdkVersion(@org.jetbrains.annotations.NotNull String targetSdkVersion) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(targetSdkVersion, "targetSdkVersion");
/*    */     $$delegate_0.setTargetSdkVersion(targetSdkVersion); } public void setTargetSdkVersion(int targetSdkVersion) { $$delegate_0.setTargetSdkVersion(targetSdkVersion); } public void setMinSdkVersion(@org.jetbrains.annotations.NotNull String minSdkVersion) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(minSdkVersion, "minSdkVersion");
/*    */     $$delegate_0.setMinSdkVersion(minSdkVersion); } public void setMinSdkVersion(int minSdkVersion) { $$delegate_0.setMinSdkVersion(minSdkVersion); } public void resValue(@org.jetbrains.annotations.NotNull String type, @org.jetbrains.annotations.NotNull String name, @org.jetbrains.annotations.NotNull String value) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(type, "type");
/*    */     kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(name, "name");
/*    */     kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(value, "value");
/*    */     $$delegate_0.resValue(type, name, value); } public void postProcessing(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.dsl.options.PostProcessingOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.postProcessing(action); } public void ndkOptions(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.dsl.options.NdkOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.ndkOptions(action); } public void multiFlavorSourceSet(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceSet> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.multiFlavorSourceSet(action); } public void minSdkVersion(@org.jetbrains.annotations.NotNull String minSdkVersion) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(minSdkVersion, "minSdkVersion");
/*    */     $$delegate_0.minSdkVersion(minSdkVersion); } public void minSdkVersion(int minSdkVersion) { $$delegate_0.minSdkVersion(minSdkVersion); } public void lintOptions(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.dsl.options.LintOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.lintOptions(action); } public void javaCompileOptions(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.dsl.options.JavaCompileOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.javaCompileOptions(action); } /**
/*    */    * @deprecated
/*    */    */
/*    */   @kotlin.Deprecated(message="Use property zipAlignEnabled")
/*    */   public boolean isZipAlignEnabled() { return $$delegate_0.isZipAlignEnabled(); } /**
/*    */    * @deprecated
/*    */    */
/*    */   @kotlin.Deprecated(message="Use property testCoverageEnabled")
/*    */   public boolean isTestCoverageEnabled() { return $$delegate_0.isTestCoverageEnabled(); } /**
/*    */    * @deprecated
/*    */    */
/*    */   @kotlin.Deprecated(message="Use property renderscriptDebuggable")
/*    */   public boolean isRenderscriptDebuggable() { return $$delegate_0.isRenderscriptDebuggable(); } /**
/*    */    * @deprecated
/*    */    */
/*    */   @kotlin.Deprecated(message="Use property pseudoLocalesEnabled")
/*    */   public boolean isPseudoLocalesEnabled() { return $$delegate_0.isPseudoLocalesEnabled(); } /**
/*    */    * @deprecated
/*    */    */
/*    */   @kotlin.Deprecated(message="Use property jniDebuggable")
/*    */   public boolean isJniDebuggable() { return $$delegate_0.isJniDebuggable(); } /**
/*    */    * @deprecated
/*    */    */
/*    */   @kotlin.Deprecated(message="Use property embedMicroApp")
/*    */   public boolean isEmbedMicroApp() { return $$delegate_0.isEmbedMicroApp(); } /**
/*    */    * @deprecated
/*    */    */
/*    */   @kotlin.Deprecated(message="Use property debuggable")
/*    */   public boolean isDebuggable() { return $$delegate_0.isDebuggable(); } public void instrumentationOptions(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.dsl.options.InstrumentationOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.instrumentationOptions(action); } public void externalNativeBuildOptions(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.dsl.options.ExternalNativeBuildOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.externalNativeBuildOptions(action); } public void externalNativeBuild(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.dsl.options.ExternalNativeBuildOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.externalNativeBuild(action); } public void dexOptions(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.dsl.options.DexOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.dexOptions(action); } public void dataBinding(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.builder.model.DataBindingOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.dataBinding(action); } public void compileOptions(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.dsl.options.CompileOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.compileOptions(action); } public void buildConfigField(@org.jetbrains.annotations.NotNull String type, @org.jetbrains.annotations.NotNull String name, @org.jetbrains.annotations.NotNull String value) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(type, "type");
/*    */     kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(name, "name");
/*    */     kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(value, "value");
/*    */     $$delegate_0.buildConfigField(type, name, value); } public void aaptOptions(@org.jetbrains.annotations.NotNull org.gradle.api.Action<com.android.build.api.dsl.options.AaptOptions> action) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(action, "action");
/*    */     $$delegate_0.aaptOptions(action); } public void setZipAlignEnabled(boolean <set-?>) { $$delegate_0.setZipAlignEnabled(<set-?>); } public boolean getZipAlignEnabled() { return $$delegate_0.getZipAlignEnabled(); } public void setVersionName(@org.jetbrains.annotations.Nullable String <set-?>) { $$delegate_0.setVersionName(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public String getVersionName() { return $$delegate_0.getVersionName(); } public void setVersionCode(@org.jetbrains.annotations.Nullable Integer <set-?>) { $$delegate_0.setVersionCode(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public Integer getVersionCode() { return $$delegate_0.getVersionCode(); } @org.jetbrains.annotations.NotNull
/*    */   public com.android.build.api.dsl.options.VectorDrawablesOptions getVectorDrawables() { return $$delegate_0.getVectorDrawables(); } @org.jetbrains.annotations.Nullable
/*    */   public com.android.build.api.sourcesets.AndroidSourceSet getVariantSourceSet() { return $$delegate_0.getVariantSourceSet(); } @org.jetbrains.annotations.Nullable
/*    */   public com.android.build.api.dsl.variant.UnitTestVariant getUnitTestVariant() { return $$delegate_0.getUnitTestVariant(); } public void setTestCoverageEnabled(boolean <set-?>) { $$delegate_0.setTestCoverageEnabled(<set-?>); } public boolean getTestCoverageEnabled() { return $$delegate_0.getTestCoverageEnabled(); } public void setTargetSdkVersion(@org.jetbrains.annotations.Nullable com.android.build.api.dsl.ApiVersion <set-?>) { $$delegate_0.setTargetSdkVersion(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public com.android.build.api.dsl.ApiVersion getTargetSdkVersion() { return $$delegate_0.getTargetSdkVersion(); } public void setSigningConfig(@org.jetbrains.annotations.Nullable com.android.build.api.dsl.options.SigningConfig <set-?>) { $$delegate_0.setSigningConfig(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public com.android.build.api.dsl.options.SigningConfig getSigningConfig() { return $$delegate_0.getSigningConfig(); } @org.jetbrains.annotations.NotNull
/*    */   public com.android.build.api.dsl.options.ShaderOptions getShaders() { return $$delegate_0.getShaders(); } public void setResValues(@org.jetbrains.annotations.NotNull java.util.List<com.android.build.api.dsl.model.TypedValue> <set-?>) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(<set-?>, "<set-?>");
/*    */     $$delegate_0.setResValues(<set-?>); } @org.jetbrains.annotations.NotNull
/*    */   public java.util.List<com.android.build.api.dsl.model.TypedValue> getResValues() { return $$delegate_0.getResValues(); } public void setResConfigs(@org.jetbrains.annotations.NotNull java.util.List<String> <set-?>) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(<set-?>, "<set-?>");
/*    */     $$delegate_0.setResConfigs(<set-?>); } @org.jetbrains.annotations.NotNull
/*    */   public java.util.List<String> getResConfigs() { return $$delegate_0.getResConfigs(); } public void setRenderscriptTargetApi(@org.jetbrains.annotations.Nullable Integer <set-?>) { $$delegate_0.setRenderscriptTargetApi(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public Integer getRenderscriptTargetApi() { return $$delegate_0.getRenderscriptTargetApi(); } public void setRenderscriptSupportModeEnabled(@org.jetbrains.annotations.Nullable Boolean <set-?>) { $$delegate_0.setRenderscriptSupportModeEnabled(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public Boolean getRenderscriptSupportModeEnabled() { return $$delegate_0.getRenderscriptSupportModeEnabled(); } public void setRenderscriptSupportModeBlasEnabled(@org.jetbrains.annotations.Nullable Boolean <set-?>) { $$delegate_0.setRenderscriptSupportModeBlasEnabled(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public Boolean getRenderscriptSupportModeBlasEnabled() { return $$delegate_0.getRenderscriptSupportModeBlasEnabled(); } public void setRenderscriptOptimLevel(int <set-?>) { $$delegate_0.setRenderscriptOptimLevel(<set-?>); } public int getRenderscriptOptimLevel() { return $$delegate_0.getRenderscriptOptimLevel(); } public void setRenderscriptNdkModeEnabled(@org.jetbrains.annotations.Nullable Boolean <set-?>) { $$delegate_0.setRenderscriptNdkModeEnabled(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public Boolean getRenderscriptNdkModeEnabled() { return $$delegate_0.getRenderscriptNdkModeEnabled(); } public void setRenderscriptDebuggable(boolean <set-?>) { $$delegate_0.setRenderscriptDebuggable(<set-?>); } public boolean getRenderscriptDebuggable() { return $$delegate_0.getRenderscriptDebuggable(); } public void setPseudoLocalesEnabled(boolean <set-?>) { $$delegate_0.setPseudoLocalesEnabled(<set-?>); } public boolean getPseudoLocalesEnabled() { return $$delegate_0.getPseudoLocalesEnabled(); } @org.jetbrains.annotations.NotNull
/*    */   public com.android.build.api.dsl.options.PostProcessingOptions getPostProcessing() { return $$delegate_0.getPostProcessing(); } @org.jetbrains.annotations.NotNull
/*    */   public com.android.build.api.dsl.options.NdkOptions getNdkOptions() { return $$delegate_0.getNdkOptions(); } @org.jetbrains.annotations.NotNull
/*    */   public String getName() { return $$delegate_0.getName(); } @org.jetbrains.annotations.Nullable
/*    */   public com.android.build.api.sourcesets.AndroidSourceSet getMultiFlavorSourceSet() { return $$delegate_0.getMultiFlavorSourceSet(); } public void setMultiDexKeepProguard(@org.jetbrains.annotations.Nullable java.io.File <set-?>) { $$delegate_0.setMultiDexKeepProguard(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public java.io.File getMultiDexKeepProguard() { return $$delegate_0.getMultiDexKeepProguard(); } public void setMultiDexKeepFile(@org.jetbrains.annotations.Nullable java.io.File <set-?>) { $$delegate_0.setMultiDexKeepFile(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public java.io.File getMultiDexKeepFile() { return $$delegate_0.getMultiDexKeepFile(); } public void setMultiDexEnabled(@org.jetbrains.annotations.Nullable Boolean <set-?>) { $$delegate_0.setMultiDexEnabled(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public Boolean getMultiDexEnabled() { return $$delegate_0.getMultiDexEnabled(); } public void setMinSdkVersion(@org.jetbrains.annotations.Nullable com.android.build.api.dsl.ApiVersion <set-?>) { $$delegate_0.setMinSdkVersion(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public com.android.build.api.dsl.ApiVersion getMinSdkVersion() { return $$delegate_0.getMinSdkVersion(); } public void setMaxSdkVersion(@org.jetbrains.annotations.Nullable Integer <set-?>) { $$delegate_0.setMaxSdkVersion(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public Integer getMaxSdkVersion() { return $$delegate_0.getMaxSdkVersion(); } public void setManifestPlaceholders(@org.jetbrains.annotations.NotNull java.util.Map<String, Object> <set-?>) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(<set-?>, "<set-?>");
/*    */     $$delegate_0.setManifestPlaceholders(<set-?>); } @org.jetbrains.annotations.NotNull
/*    */   public java.util.Map<String, Object> getManifestPlaceholders() { return $$delegate_0.getManifestPlaceholders(); } @org.jetbrains.annotations.NotNull
/*    */   public com.android.build.api.dsl.options.LintOptions getLintOptions() { return $$delegate_0.getLintOptions(); } public void setJniDebuggable(boolean <set-?>) { $$delegate_0.setJniDebuggable(<set-?>); } public boolean getJniDebuggable() { return $$delegate_0.getJniDebuggable(); } @org.jetbrains.annotations.NotNull
/*    */   public com.android.build.api.dsl.options.JavaCompileOptions getJavaCompileOptions() { return $$delegate_0.getJavaCompileOptions(); } @org.jetbrains.annotations.NotNull
/*    */   public com.android.build.api.dsl.options.InstrumentationOptions getInstrumentationOptions() { return $$delegate_0.getInstrumentationOptions(); } @org.jetbrains.annotations.NotNull
/*    */   public java.util.List<String> getFlavorNames() { return $$delegate_0.getFlavorNames(); } @org.jetbrains.annotations.NotNull
/*    */   public com.android.build.api.dsl.options.ExternalNativeBuildOptions getExternalNativeBuildOptions() { return $$delegate_0.getExternalNativeBuildOptions(); } public void setEmbedMicroApp(boolean <set-?>) { $$delegate_0.setEmbedMicroApp(<set-?>); } public boolean getEmbedMicroApp() { return $$delegate_0.getEmbedMicroApp(); } @org.jetbrains.annotations.NotNull
/*    */   public com.android.build.api.dsl.options.DexOptions getDexOptions() { return $$delegate_0.getDexOptions(); } public void setDebuggable(boolean <set-?>) { $$delegate_0.setDebuggable(<set-?>); } public boolean getDebuggable() { return $$delegate_0.getDebuggable(); } @org.jetbrains.annotations.NotNull
/*    */   public com.android.builder.model.DataBindingOptions getDataBinding() { return $$delegate_0.getDataBinding(); } public void setCrunchPngs(boolean <set-?>) { $$delegate_0.setCrunchPngs(<set-?>); } public boolean getCrunchPngs() { return $$delegate_0.getCrunchPngs(); } @org.jetbrains.annotations.NotNull
/*    */   public com.android.build.api.dsl.options.CompileOptions getCompileOptions() { return $$delegate_0.getCompileOptions(); } @org.jetbrains.annotations.NotNull
/*    */   public String getBuildTypeName() { return $$delegate_0.getBuildTypeName(); } public void setBuildConfigFields(@org.jetbrains.annotations.NotNull java.util.List<com.android.build.api.dsl.model.TypedValue> <set-?>) { kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(<set-?>, "<set-?>");
/*    */     $$delegate_0.setBuildConfigFields(<set-?>); } @org.jetbrains.annotations.NotNull
/*    */   public java.util.List<com.android.build.api.dsl.model.TypedValue> getBuildConfigFields() { return $$delegate_0.getBuildConfigFields(); } @org.jetbrains.annotations.NotNull
/*    */   public java.util.List<com.android.build.api.sourcesets.AndroidSourceSet> getBaseSourceSets() { return $$delegate_0.getBaseSourceSets(); } public void setApplicationId(@org.jetbrains.annotations.Nullable String <set-?>) { $$delegate_0.setApplicationId(<set-?>); } @org.jetbrains.annotations.Nullable
/*    */   public String getApplicationId() { return $$delegate_0.getApplicationId(); } @org.jetbrains.annotations.Nullable
/*    */   public com.android.build.api.dsl.variant.AndroidTestVariant getAndroidTestVariant() { return $$delegate_0.getAndroidTestVariant(); } @org.jetbrains.annotations.NotNull
/*    */   public com.android.build.api.dsl.options.AaptOptions getAaptOptions() { return $$delegate_0.getAaptOptions(); } public ApplicationVariantShim(@org.jetbrains.annotations.NotNull AppVariantImpl internalObject) { $$delegate_0 = internalObject; }
/*    */   
/*    */   @org.jetbrains.annotations.NotNull
/* 27 */   public String toString() { return getName(); }
/*    */ }

/* Location:
 * Qualified Name:     com.android.build.gradle.internal.api.dsl.variant.ApplicationVariantShim
 * Java Class Version: 8 (52.0)
 * JD-Core Version:    0.7.1
 */